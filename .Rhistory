"Main Model with Random Slopes - Uninformed Priors",
"Main Model with Random Slopes - D Varovic & B Schoenfeld Priors",
"Main Model with Random Slopes - J Steele Priors")),
logBF = as.numeric(logBF)) |>
ggplot(aes(x=Numerator, y=Denominator, fill=logBF)) +
geom_tile() +
geom_raster() +
geom_text(aes(label = round(logBF,2))) +
scale_fill_gradient2(low = "#E69F00", mid="white", high = "#56B4E9") +
scale_y_discrete(limits=rev) +
scale_x_discrete(position = "top", labels = function(x) str_wrap(x, width = 20)) +
labs(title = "Comparing models using 2×log(BF)",
fill = "2×log(BF)",
caption = "Kass and Raferty (1995) scale:
-Inf to 0 = Negative; 0 to 2 = Weak; 2 to 6 = Positive; 6 to 10 = Strong; 10 to +Inf = Very Strong") +
theme_classic() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=2.5))
targets::tar_make()
targets::tar_make()
targets::tar_make()
renv::status()
renv::snapshot()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_visnetwork()
targets::tar_make()
targets::tar_make()
targets::tar_load(main_model_SMD)
brms::get_prior(main_model_SMD)
targets::tar_load(main_model_r_slopes_SMD)
brms::get_prior(main_model_r_slopes_SMD)
targets::tar_load(steele_priors_model_SMD)
brms::get_prior(steele_priors_model_SMD)
p <- brms::get_prior(main_model_SMD)
View(p)
install.packages("equatiomatic")
# Read in data and prepare
data <- read.csv("data/ROM_regional_hypertrophy_data.csv", dec = ",") |>
clean_names() |>
# add code for each arm; note "within" designs have mutliple conditions but a single group
mutate(arm_number = if_else(design == "Within", paste(study_number, design), paste(study_number,group)),
arm_number = as.factor(unclass(factor(unlist(arm_number))))) |>
# add code for effects
rowid_to_column("effect_number") |>
# convert means/sds to numeric
mutate(m_pre = as.numeric(m_pre),
m_post = as.numeric(m_post),
sd_pre = as.numeric(sd_pre),
sd_post = as.numeric(sd_post),
mean_muscle_length = as.numeric(mean_muscle_length)*100
) |>
# rescale muscle length and centre along with site
mutate(mean_muscle_length_centred = (mean_muscle_length-50)/100,
site_centred = (site-50)/100) |>
# add assumed pre-post correlation
mutate(ri = 0.7)
ary(tidyverse)
library(tidyverse)
library(janitor)
library(metafor)
library(brms)
library(tidybayes)
library(marginaleffects)
library(patchwork)
library(bayestestR)
rstan::rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores()-1)
# Read in data and prepare
data <- read.csv("data/ROM_regional_hypertrophy_data.csv", dec = ",") |>
clean_names() |>
# add code for each arm; note "within" designs have mutliple conditions but a single group
mutate(arm_number = if_else(design == "Within", paste(study_number, design), paste(study_number,group)),
arm_number = as.factor(unclass(factor(unlist(arm_number))))) |>
# add code for effects
rowid_to_column("effect_number") |>
# convert means/sds to numeric
mutate(m_pre = as.numeric(m_pre),
m_post = as.numeric(m_post),
sd_pre = as.numeric(sd_pre),
sd_post = as.numeric(sd_post),
mean_muscle_length = as.numeric(mean_muscle_length)*100
) |>
# rescale muscle length and centre along with site
mutate(mean_muscle_length_centred = (mean_muscle_length-50)/100,
site_centred = (site-50)/100) |>
# add assumed pre-post correlation
mutate(ri = 0.7)
# Calculate standardised effects
data <- escalc(
measure = "SMCRH",
m1i = m_post,
m2i = m_pre,
sd1i = sd_post,
sd2i = sd_pre,
ri = ri,
ni = n,
data = data
)
data <- data |>
# add study weights/sizes
mutate(
wi = 1/sqrt(vi),
size = 0.5 + 3.0 * (wi - min(wi, na.rm=TRUE))/(max(wi, na.rm=TRUE) - min(wi, na.rm=TRUE)))
m <- lme4::lmer(
yi | se(sqrt(vi)) ~ mean_muscle_length_centred * site_centred +
(1 | study_number) +
(1 | arm_number) +
(1 | effect_number),
data = data)
m <- lme4::lmer(
yi ~ mean_muscle_length_centred * site_centred +
(1 | study_number) +
(1 | arm_number) +
(1 | effect_number),
data = data)
m <- lme4::lmer(
yi ~ mean_muscle_length_centred * site_centred +
(1 | study_number) +
(1 | arm_number),
data = data)
equatiomatic::extract_eq(m)
m <- lme4::lmer(
yi ~ mean_muscle_length_centred * site_centred +
(mean_muscle_length_centred + site_centred | study_number) +
(1 | arm_number),
data = data)
equatiomatic::extract_eq(m)
targets::tar_load(wolf_priors_model)
targets::tar_load(wolf_priors_model_SMD)
get_prior(wolf_priors_model_SMD)
round(get_prior(wolf_priors_model_SMD))
get_prior(wolf_priors_model_SMD) |>
mutate_all(round())
get_prior(wolf_priors_model_SMD) |>
mutate_all(round(2))
get_prior(wolf_priors_model_SMD) |>
mutate_if(is.numeric(), round(2))
get_prior(wolf_priors_model_SMD) |>
mutate_if(is.numeric(.), round(2))
get_prior(wolf_priors_model_SMD) |>
mutate_if(is.numeric(x), round(2))
as.data.frame(get_prior(wolf_priors_model_SMD)) |>
mutate_if(is.numeric(x), round(2))
as.data.frame(get_prior(wolf_priors_model_SMD))
wolf_priors_model_SMD
get_prior(main_model_SMD)
targets::tar_load(wolf_priors_model_lnRR)
get_prior(wolf_priors_model_lnRR)
default_prior(yi | se(sqrt(vi)) ~ 0 + Intercept + mean_muscle_length_centred * site_centred +
(1 | study_number) +
(1 | arm_number) +
(1 | effect_number),
data = data)
rep(1:10, each=4)
data |> mutate(rand = rep(1:10, each=4))
data |> mutate(rand = rep(1:(184/2)))
data |> mutate(rand = rep(1:(184/2), each=2))
m <- lme4::lmer(
yi ~ mean_muscle_length_centred * site_centred +
(mean_muscle_length_centred + site_centred | study_number) +
(1 | arm_number) + (1| rand),
data = data |> mutate(rand = rep(1:(184/2), each=2)))
equatiomatic::extract_eq(m)
default_prior(yi | se(sqrt(vi)) ~ 0 + Intercept + mean_muscle_length_centred * site_centred +
(mean_muscle_length_centred + site_centred | study_number) +
(1 | arm_number) +
(1 | effect_number),
data = data)
targets::tar_make()
targets::tar_make()
targets::tar_load(muscle_model_SMD)
get_prior(muscle_model_SMD)
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_prune()
targets::tar_load(wolf_priors_model_SMD)
targets::tar_load(wolf_priors_model_lnRR)
get_prior(wolf_priors_model_SMD)
get_prior(wolf_priors_model_lnRR)
targets::tar_load(steele_priors_model_SMD)
targets::tar_load(steele_priors_model_lnRR)
get_prior(steele_priors_model_SMD)
targets::tar_load(wolf_priors_model_slope_SMD)
targets::tar_load(wolf_priors_model_slopes_SMD)
targets::tar_load(wolf_priors_model_slopes_lnRR)
get_prior(wolf_priors_model_slopes_SMD)
get_prior(steele_priors_model_lnRR)
targets::tar_load(authors_priors_model_SMD)
targets::tar_load(authors_priors_model_lnRR)
get_prior(authors_priors_model_SMD)
get_prior(steele_priors_model_SMD)
get_prior(authors_priors_model_lnRR)
#| message: false
#| warning: false
#| echo: false
targets::tar_load(rhat_uninformed_model_SMD)
targets::tar_make()
targets::tar_load(rhat_uninformed_model_SMD)
rhat_uninformed_model_SMD
targets::tar_make()
targets::tar_make()
update.packages("quarto")
targets::tar_make()
targets::tar_visnetwork()
targets::tar_load(trace_plot_uninformed_model_SMD)
targets::tar_make()
targets::tar_load(data_SMD)
m <- lme4::lmer(yi ~ mean_muscle_length_centred*site_centred +
(mean_muscle_length_centred+site_centred|study_number) +
(1|arm_number) +
(1|effect_number),
data = data_SMD |> mutate(effect_number = rep(1:(184/2), each=2)))
library(tidyverse)
m <- lme4::lmer(yi ~ mean_muscle_length_centred*site_centred +
(mean_muscle_length_centred+site_centred|study_number) +
(1|arm_number) +
(1|effect_number),
data = data_SMD |> mutate(effect_number = rep(1:(184/2), each=2)))
m
equatiomatic::extract_eq(m)
targets::tar_load(wolf_priors_model_SMD)
targets::tar_load(wolf_priors_model_lnRR)
wolf_priors_model_SMD
View(wolf_priors_model_lnRR)
length(unique(wolf_priors_model_SMD$data$effect_number))
length(unique(wolf_priors_model_lnRR$data$effect_number))
length(unique(wolf_priors_model_SMD$data$study_number))
length(unique(wolf_priors_model_SMD$data$arm_number))
length(unique(wolf_priors_model_lnrr$data$study_number))
length(unique(wolf_priors_model_lnRR$data$study_number))
length(unique(wolf_priors_model_lnRR$data$arm_number))
data <- read.csv(here("data", "ROM_regional_hypertrophy_data.csv"), dec = ",")
library(here)
data <- read.csv(here("data", "ROM_regional_hypertrophy_data.csv"), dec = ",")
exp(10)
log(22026.47)
#| message: false
#| warning: false
#| echo: false
#| include: false
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
options(knitr.kable.NA = '')
library(tidyverse)
library(patchwork)
library(marginaleffects)
library(bayestestR)
#| message: false
#| warning: false
#| echo: false
targets::tar_load(wolf_priors_model_SMD)
targets::tar_load(wolf_priors_model_lnRR)
wolf_priors_model_SMD
coef(wolf_priors_model_SMD)
targets::tar_load(tidy_wolf_priors_model_SMD)
targets::tar_load(tidy_wolf_priors_model_lnRR)
tidy_wolf_priors_model_SMD
tidy_wolf_priors_model_SMD
tidy_wolf_priors_model_SMD
tidy_wolf_priors_model_SMD$estimate[7]
wolf_priors_model_lnRR
#| message: false
#| warning: false
#| echo: false
# Get SMD model summaries
# Interaction plot - slopes
wolf_priors_model_SMD_summary <- avg_slopes(
wolf_priors_model_SMD,
variables = "mean_muscle_length_centred",
newdata = datagrid(
mean_muscle_length_centred = seq(-0.35, 0.35, length = 101),
site_centred = c(-0.25,0,0.25),
vi = 0
),
by = "site_centred"
)
wolf_priors_model_SMD_slopes <- wolf_priors_model_SMD_summary |>
posterior_draws()
wolf_priors_model_SMD_rope_percents <- tibble(
site_centred = c(-0.25,0,0.25),
rope_percent = c(
bayestestR::rope(filter(wolf_priors_model_SMD_slopes, site_centred == -0.25)$draw/2, range = c(-0.1, 0.1), ci = 1)$ROPE_Percentage,
bayestestR::rope(filter(wolf_priors_model_SMD_slopes, site_centred == 0)$draw/2, range = c(-0.1, 0.1), ci = 1)$ROPE_Percentage,
bayestestR::rope(filter(wolf_priors_model_SMD_slopes, site_centred == 0.25)$draw/2, range = c(-0.1, 0.1), ci = 1)$ROPE_Percentage
),
pd = c(
bayestestR::rope(filter(wolf_priors_model_SMD_slopes, site_centred == -0.25)$draw/2, range = c(0.1, Inf), ci = 1)$ROPE_Percentage,
bayestestR::rope(filter(wolf_priors_model_SMD_slopes, site_centred == 0)$draw/2, range = c(0.1, Inf), ci = 1)$ROPE_Percentage,
bayestestR::rope(filter(wolf_priors_model_SMD_slopes, site_centred == 0.25)$draw/2, range = c(0.1, Inf), ci = 1)$ROPE_Percentage
)
)
# Get lnRR model summaries
# Interaction plot - slopes
wolf_priors_model_total_var <- insight::get_variance_random(wolf_priors_model_lnRR)
wolf_priors_model_lnRR_summary <- avg_slopes(
wolf_priors_model_lnRR,
variables = "mean_muscle_length_centred",
newdata = datagrid(
mean_muscle_length_centred = seq(-0.35, 0.35, length = 101),
site_centred = c(-0.25,0,0.25),
vi = 0
),
by = "site_centred"
)
wolf_priors_model_lnRR_slopes <- wolf_priors_model_lnRR_summary |>
posterior_draws() |>
mutate(draw = 100*(exp(draw+0.5*wolf_priors_model_total_var)-1))
wolf_priors_model_lnRR_summary <- wolf_priors_model_lnRR_summary |>
mutate(
estimate = 100*(exp(estimate+0.5*wolf_priors_model_total_var)-1),
conf.low = 100*(exp(conf.low+0.5*wolf_priors_model_total_var)-1),
conf.high = 100*(exp(conf.high+0.5*wolf_priors_model_total_var)-1)
)
wolf_priors_model_lnRR_rope_percents <- tibble(
site_centred = c(-0.25,0,0.25),
rope_percent = c(
bayestestR::rope(filter(wolf_priors_model_lnRR_slopes, site_centred == -0.25)$draw/2, range = c(-3, 3), ci = 1)$ROPE_Percentage,
bayestestR::rope(filter(wolf_priors_model_lnRR_slopes, site_centred == 0)$draw/2, range = c(-3, 3), ci = 1)$ROPE_Percentage,
bayestestR::rope(filter(wolf_priors_model_lnRR_slopes, site_centred == 0.25)$draw/2, range = c(-3, 3), ci = 1)$ROPE_Percentage
),
pd = c(
bayestestR::rope(filter(wolf_priors_model_lnRR_slopes, site_centred == -0.25)$draw/2, range = c(3, Inf), ci = 1)$ROPE_Percentage,
bayestestR::rope(filter(wolf_priors_model_lnRR_slopes, site_centred == 0)$draw/2, range = c(3, Inf), ci = 1)$ROPE_Percentage,
bayestestR::rope(filter(wolf_priors_model_lnRR_slopes, site_centred == 0.25)$draw/2, range = c(3, Inf), ci = 1)$ROPE_Percentage
)
)
100*(exp(draw+0.5*tidy_wolf_priors_model_lnRR$estimate[7])-1)
100*(exp(tidy_wolf_priors_model_lnRR$estimate[7]+0.5*wolf_priors_model_total_var)-1)
targets::tar_load(tidy_uninformed_model_SMD)
targets::tar_load(tidy_wolf_priors_model_slopes_SMD)
targets::tar_load(tidy_wolf_priors_model_slopes_lnRR)
tidy_wolf_priors_model_slopes_SMD
dat <- tibble(
pre_prom_m = c(39.6,36.5,35.1,41.5),
post_prom_m = c(41.4,37.9,37,44.1),
pre_prom_sd = c(8.6,8.9,9.5,10.5),
post_prom_sd = c(7.8,8.5,9.7,10.3),
pre_prom_m = c(39.3,36.5,34.4,41.3),
post_prom_m = c(41.1,37.7,37.4,44.4),
pre_prom_sd = c(7.9,8.4,9.6,10.8),
post_prom_sd = c(7.6,8.5,9.5,10.5),
)
s
dat <- tibble(
pre_prom_m = c(39.6,36.5,35.1,41.5),
post_prom_m = c(41.4,37.9,37,44.1),
pre_prom_sd = c(8.6,8.9,9.5,10.5),
post_prom_sd = c(7.8,8.5,9.7,10.3),
pre_from_m = c(39.3,36.5,34.4,41.3),
post_from_m = c(41.1,37.7,37.4,44.4),
pre_from_sd = c(7.9,8.4,9.6,10.8),
post_from_sd = c(7.6,8.5,9.5,10.5),
)
prom <- tibble(
pre_prom_m = c(39.6,36.5,35.1,41.5),
post_prom_m = c(41.4,37.9,37,44.1),
pre_prom_sd = c(8.6,8.9,9.5,10.5),
post_prom_sd = c(7.8,8.5,9.7,10.3)
)
from <- tibble(
pre_from_m = c(39.3,36.5,34.4,41.3),
post_from_m = c(41.1,37.7,37.4,44.4),
pre_from_sd = c(7.9,8.4,9.6,10.8),
post_from_sd = c(7.6,8.5,9.5,10.5)
)
prom <- tibble(
pre_prom_m = c(39.6,36.5,35.1,41.5),
post_prom_m = c(41.4,37.9,37,44.1),
pre_prom_sd = c(8.6,8.9,9.5,10.5),
post_prom_sd = c(7.8,8.5,9.7,10.3),
ni = 30,
ri = 0.7
)
from <- tibble(
pre_from_m = c(39.3,36.5,34.4,41.3),
post_from_m = c(41.1,37.7,37.4,44.4),
pre_from_sd = c(7.9,8.4,9.6,10.8),
post_from_sd = c(7.6,8.5,9.5,10.5),
ni = 30,
ri = 0.7
)
prom <- tibble(
pre_prom_m = c(39.6,36.5,35.1,41.5),
post_prom_m = c(41.4,37.9,37,44.1),
pre_prom_sd = c(8.6,8.9,9.5,10.5),
post_prom_sd = c(7.8,8.5,9.7,10.3),
ni = 30,
ri = 0.7
)
from <- tibble(
pre_from_m = c(39.3,36.5,34.4,41.3),
post_from_m = c(41.1,37.7,37.4,44.4),
pre_from_sd = c(7.9,8.4,9.6,10.8),
post_from_sd = c(7.6,8.5,9.5,10.5),
ni = 30,
ri = 0.7
)
prom <- escalc(measure="SMCR", m1i=post_prom_m, m2i=pre_prom_m, sd1i=pre_prom_sd, ni=ni, ri=ri, data=prom)
prom <- metafor::escalc(measure="SMCR", m1i=post_prom_m, m2i=pre_prom_m, sd1i=pre_prom_sd, ni=ni, ri=ri, data=prom)
from <- metafor::escalc(measure="SMCR", m1i=post_prom_m, m2i=pre_prom_m, sd1i=pre_prom_sd, ni=ni, ri=ri, data=prom)
prom
from
from <- metafor::escalc(measure="SMCR", m1i=post_from_m, m2i=pre_from_m, sd1i=pre_from_sd, ni=ni, ri=ri, data=from)
from
prom <- metafor::escalc(measure="SMCR", m1i=post_prom_m, m2i=pre_prom_m, sd1i=pre_prom_sd, ni=ni, ri=ri, data=prom)
from <- metafor::escalc(measure="SMCR", m1i=post_from_m, m2i=pre_from_m, sd1i=pre_from_sd, ni=ni, ri=ri, data=from)
from <- tibble(
pre_from_m = c(39.3,36.5,34.4,41.3),
post_from_m = c(41.1,37.7,37.4,44.4),
pre_from_sd = c(7.9,8.4,9.6,10.8),
post_from_sd = c(7.6,8.5,9.5,10.5),
ni = 30,
ri = 0.7
)
prom <- metafor::escalc(measure="SMCR", m1i=post_prom_m, m2i=pre_prom_m, sd1i=pre_prom_sd, ni=ni, ri=ri, data=prom)
from <- metafor::escalc(measure="SMCR", m1i=post_from_m, m2i=pre_from_m, sd1i=pre_from_sd, ni=ni, ri=ri, data=from)
prom
from
tibble(
yi = from$yi - prom$yi,
vi = from$vi + prom$vi
)
tibble(
yi = from$yi - prom$yi,
conf.low = yi - 1.96 * ( from$vi + prom$vi)
)
tibble(
yi = from$yi - prom$yi,
conf.low = yi - 1.96 * ( from$vi + prom$vi),
conf.high = yi - 1.96 * ( from$vi + prom$vi)
)
tibble(
yi = from$yi - prom$yi,
conf.low = yi - 1.96 * ( from$vi + prom$vi),
conf.high = yi + 1.96 * ( from$vi + prom$vi)
)
tibble(
yi = from$yi - prom$yi,
conf.low = yi - 1.96 * ( sqrt(from$vi) + sqrt(prom$vi)),
conf.high = yi + 1.96 * ( from$vi + prom$vi)
)
tibble(
yi = from$yi - prom$yi,
conf.low = yi - 1.96 * (sqrt(from$vi) + sqrt(prom$vi)),
conf.high = yi + 1.96 * (sqrt(from$vi) + sqrt(prom$vi))
)
dat <- tibble(
yi = from$yi - prom$yi,
conf.low = yi - 1.96 * (sqrt(from$vi) + sqrt(prom$vi)),
conf.high = yi + 1.96 * (sqrt(from$vi) + sqrt(prom$vi))
)
dat <- tibble(
yi = from$yi - prom$yi,
conf.low = yi - 1.96 * (sqrt(from$vi) + sqrt(prom$vi)),
conf.high = yi + 1.96 * (sqrt(from$vi) + sqrt(prom$vi)),
effect = c(1,2,3,4)
)
dat <- tibble(
yi = from$yi - prom$yi,
vi = from$vi + prom$vi,
conf.low = yi - 1.96 * sqrt(vi),
conf.high = yi + 1.96 * sqrt(vi),
effect = c(1,2,3,4)
)
metafor::rma(yi, vi,
data = dat)
library(metafor)
forest(rma(yi, vi,
data = dat)
)
dat <- tibble(
yi = from$yi - prom$yi,
vi = from$vi + prom$vi,
conf.low = yi - 1.96 * sqrt(vi),
conf.high = yi + 1.96 * sqrt(vi),
effect = c(1,2,3,4),
label = c("Flexor (55%)",
"Flexor (45%)",
"Flexor (55%)",
"Extensor (45%)")
)
?rma
forest(rma(yi, vi,
data = dat,
slab = label)
)
dat <- tibble(
yi = from$yi - prom$yi,
vi = from$vi + prom$vi,
conf.low = yi - 1.96 * sqrt(vi),
conf.high = yi + 1.96 * sqrt(vi),
effect = c(1,2,3,4),
label = c("Flexor (55%)",
"Flexor (45%)",
"Extensor (55%)",
"Extensor (45%)")
)
forest(rma(yi, vi,
data = dat,
slab = label)
)
prom
from
